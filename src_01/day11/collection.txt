

public class Test01_Map {
	public static void main(String[] args) {
		Map<String, String> map = new HashMap<String, String>();
		map.put("java01", "1234");
		map.put("java02", "0909");
		map.put("java03", "0070");
		map.put("user01", "1234");
		map.put("user02", "1234");
		map.put("java01", "0000");
		
		map.forEach(new BiConsumer<String, String>() {
			public void accept(String t, String u) {
				System.out.println(t+"  "+u);
			};
		});
		
		map.forEach((String t, String u)-> {
				System.out.println(t+"  "+u);
			}
		);
		
		map.forEach((t, u)->System.out.println(t+"="+u));
		
		/*
		System.out.println(map);
		Set<String> key = map.keySet();
		Iterator<String> it = key.iterator();
		while (it.hasNext()) {
			String keyname = (String) it.next();
	        System.out.println(keyname+"/"+map.get(keyname));
		}
		*/
		
		
		/*
		Scanner input = new Scanner(System.in);
		
		while(true) {
			System.out.println("ID 와 PW를 입력하세요");
			System.out.println("ID : _");
			String id = input.nextLine().trim();
			System.out.println("Password : _");
			String pw = input.nextLine().trim();
			
			if(!map.containsKey(id)) {
				System.out.println("입력하신 ID 는 존재하지 않습니다..");
				continue;
			}else {
				if(!pw.equals(map.get(id))) {
					System.out.println("로그인 실패 ");
				}else {
					System.out.println("로그인 성공 ");
				}
			}
		}
		
		*/
		
	}
}

-------- Properties ----------------------------------------------------


public class Test02_Properties {
	public static void main(String[] args) {
		Properties p = new Properties();
		try {
			p.load(new FileInputStream("dbinfo.txt"));
			String url = p.getProperty("url");
			String user = p.getProperty("user");
			String pw = p.getProperty("pw");
			
			System.out.println(url);
			System.out.println(user+"/"+pw);
		} catch (IOException e  ) {
			e.printStackTrace();
		}

	}
}

------------stream  처리 -----------------------------

public class Test03 {
	public static void main(String[] args) {
		List<Integer> list = new ArrayList<Integer>();
		list.add(77);
		list.add(90);
		list.add(75);
		list.add(80);
		list.add(49);
		
		for(Integer data:list) {
			System.out.print(data+"  ");
		}
		System.out.println("\n--------------------");
		
		list.forEach(new Consumer<Integer>() {
			@Override
			public void accept(Integer t) {
				System.out.print(t+" ");
			}
		});
		System.out.println();

		list.forEach(t-> System.out.print(t+" "));
		System.out.println();
		list.removeIf(i -> i%2==0);
		list.forEach(i-> System.out.print(i+" "));
		System.out.println();
		list.replaceAll(i->i*10);
		list.forEach(i-> System.out.print(i+" "));
		
	}
}


-----------Stream----------------------------------

import java.util.stream.Stream;

public class Test04 {
	public static void main(String[] args) {
		String[] names = {"hong GD","lee JK","KO","javains"};
		List<String> nn = Arrays.asList(names);
		
		nn.forEach(i->System.out.print(i.toUpperCase()));
		System.out.println();
		nn.stream()
		.filter(i->i.length()>5)
		.forEach(i->System.out.print(i+" "));
		
		System.out.println();
		
		Stream.of(1,2,3,4,5,6,7,8,9,10)
		.filter(i->i%2==0).forEach(i->System.out.print(i+" "));

	}
}



----------------------------------------
package day11;

import java.util.ArrayList;
import java.util.List;

import day09.ex.Book;

public class Test05 {
	public static void main(String[] args) {
       List<Book> books = new ArrayList<Book>();
       books.add(new Book("java", 500));
       books.add(new Book("sql", 5200));
       books.add(new Book("servlet&jsp", 2500));
       books.add(new Book("html5", 1500));
       books.add(new Book("java", 500));
       books.add(new Book("java", 500));
       

       books.forEach(i->System.out.println(i.getTitle().charAt(0)+"**"));
       System.out.println("-----------------");
       books.stream().forEach(i->System.out.println(i));
       System.out.println("-----------------");
       books.stream().distinct().forEach(i->System.out.println(i));
       
       long count = books.stream().filter(i->i.getPrice() > 1500).count();
       System.out.println(count);
       
       long sum = books.stream().mapToInt(i->i.getPrice()).sum();
       System.out.println(sum);
       
	}
}

